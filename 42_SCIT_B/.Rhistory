bbb
length(bbb)
bbb
ccc <-c(100:120)
ccc
ccc <-c(100:120);ccc
bbb <- c(10,20,30,40,50);length(bbb);bbb
?seq()
# seq(from, to, by=+-num, length.out) 파라미터가 존재
ccc2 <- seq(100, 150, by=5);ccc
# seq(from, to, by=+-num, length.out) 파라미터가 존재
ccc2 <- seq(100, 150, by=5);ccc2
# 하나의 값을 여러 변수에 할당
aa <- bb <- cc <- dd <- 100
aa
bb
aa;bb;cc;dd;
### 3) 연속값 계산하기 ----
dd <- seq(10,100, by=10);dd
### 3) 연속값 계산하기 ----
dd <- seq(10,100, by=10);dd;length(dd)
ee <- seq(100, by=-5);ee;length(ee)
### 3) 연속값 계산하기 ----
dd <- seq(10,100, by=10);dd;length(dd)
ee <- seq(100, by=-5);ee;length(ee)
#콘솔 값 지우기 ctrl + l 누르면 된다.
dd+ee
# Q
d1 <- c(1:10)
d2 <- c(1:3)
d1 + d2
d1
d2
# Q
d1 <- c(1:10);d1
d2 <- c(1:3);d2
# Q
d1 <- c(1:10);d1;length(d1)
d2 <- c(1:3);d2;length(d2)
d1+d2
d2 <- c(1:5);d2;length(d2)
#길이가 너무 맞지 않아서 더할수가 없다.
d1+d2
d2 <- c(1:4);d2;length(d2)
#길이가 너무 맞지 않아서 더할수가 없다.
d1+d2
d2 <- c(1:3);d2;length(d2)
#길이가 너무 맞지 않아서 더할수가 없다.
d1+d2
h1 <- "aaa";h1;length(h1)
h2 <- "Hello R Programming~";h2;length(h2)
h3 <- c("Hello","R", "Programming~");h3;length(h3)
h1 + h2
h1 + h3
h3 + h2
h1+3
### 5) 반복문자 변수 생성 (rep()) ----
?rep()
r1 <- rep(1,5)
r1 <- rep(1,5);r1
r2 <- rep(1:5,3);r2
rep(1:5, each=3);rep
rep(1:5, each=3) -> r3; r3
rep(1:5, each=3)
length(rep(1:5, each=3))
rep(1:5, each=3,length.out)
rep(1:5, each=3,length.out=100)
rep(1:5)
rep(1:5,each=2)
rep(1:5,each=2,times=3)
rep(1:5,each=2,times=3,length.out=100)
#중복된 데이터를 제외하고 읽는법
# 합집합 교집합 차집합을 의미한다.
#합집합 a 와 b 를 합친 전부
#교집합 a 와 b 의 중복된값만
#차집합
### 6) 집합(set,중복된 데이터는 제외)----
set1 <- seq(10,100,by=2);set1
set2 <- seq(30,150,by=4);set2
length(set1)
length(set2)
#합집합
u_set <- union(set1, set2);u_set
length(u_set)
#교집합
i_set <- intersect(set1, set2);i_set
length(i_set)
#차집합
setdiff(set1,set2)-> sd1;sd1
setdiff(set2,set1)-> sd2;sd2
#차집합
setdiff(set1,set2)-> sd1;sd1
setdiff(set2,set1)-> sd2;sd2
length(sd2)
length(sd1)
#set 비교
setequal(set1, set2)
setequal(c(1,3,5),c(1,1,1,5,5,3,3,3,3,1,5)
setequal(c(1,3,5), c(1,1,1,5,5,3,3,3,3,1,5))
setequal(c(1,3,5), c(1,1,1,5,5,3,3,3,3,1,5))
#is.element()  %in%, in   in연산자
is.element(9,set1)
is.element(10,set1)
is.element(1,c(1,2,3))
is.element(5,c(1,2,3))
#dts 준비
?sample()
sample(1:100, 3)
sample(0.00001:100, 3)
sample(0.00001:100.00000, 3)
sample(0.00001:100.00000, 3)
sample(0.00001:100.00000, 1)
sample(0.00001:100.00000, 1)
sample(1:100, 10)
#NA (결측치)
a
a <-sample(1:100, 10)
#NA (결측치)
a
# () 함수 [] 데이터셋
a[]
# () 함수 [] 데이터셋
a[7]
a[c(4,7,10)]
#순서 바꾸고 싶은경우
a[c(4,7,10)] <- NA
a
### 7-1) sort()
a
### 7-1) sort()
a
sort(a)
sort(a, decreasing = T)
#NA표기
sort(a,na.last = T)
sort(a,na.last = F)
### 7-1) sort() 오름차순(낮은값부터 큰숫자로) NA는 무시한다.
a;length(a)
length(sort(a))
# 7-2) order()
a
sort(a)
order(a)
?order()
# 7-2) order() ----
a
order(a)
sort(a)
# 역정렬
a
sort(a, decreasing = F)
sort(a, decreasing = T)
sort(a, decreasing = F)
sort(a, decreasing = T)
order(-a)
# 7-2) order() ----
#정렬된 데이터를 기준으로 원자료의 index (위치값)를 리턴
a
sort(a, decreasing = T)
order(-a)
#NA
a
order(a, na.last = T)
order(a, na.last = F)
order(a, na.last = NA) #NA제거거
# Q
r1 <- c(1,5)
# Q
r1 <- c(1,5);r1
r2 <- c(1:5,3);r2
r2 <- rep(1:5,3);r2
# Q
r1 <- c(1,5);r1
r2 <- rep(1:5,3);r2
sort(r1)
sort(r2)
r2(order(r2))
r2[order(r2)]
order(r2)
r2
order(r2)
r2
sort(r2)
order(r2)
paste(order(r2))
paste(order(r2),collapse = ",")
c(1,6,11,2,7,12,3,8,13,4,9,14,5,10,15)
r2[c(1,6,11,2,7,12,3,8,13,4,9,14,5,10,15)]
sort(r2)
r2[order(r2)]
r2[order(r2)]
sort(r2)
#사운드 패키지 ----
install.packages("beepr")
library(beepr)
search()
### 5) 사용자 정의 함수 ----
# 사용자정의함수명 <- function(x1,x2,...){
#   ...
#   함수구현
#   ...
#   return(결과값)
# }
# Q. 합계와 평균함수
my_fn <- function(a,b,c,d){
sum1 <- sum(a,b,c,d)
avg1 <- sum1/4
cat(paste("sum : " + sum1),
paste("avg : " + avg1),fill=1)
return(list(sum1, avg1))
}
#전체를 드래그 해주고 실행해줘야한다.
bae_ch <- my_fn(10,12,45,60)
my_fn <- function(a,b,c,d){
sum1 <- sum(a,b,c,d)
avg1 <- sum1/4
cat(paste("sum : ", sum1),
paste("avg : ", avg1),fill=1)
return(list(sum1, avg1))
}
#전체를 드래그 해주고 실행해줘야한다.
bae_ch <- my_fn(10,12,45,60)
bae_ch$sum; bea_ch$avg
bae_ch$sum
bea_ch$avg
bae_ch$sum1
bea_ch$avg1
#사운드 패키지 ----
install.packages("beepr")
#전체를 드래그 해주고 실행해줘야한다.
bae_ch <- my_fn(10,12,45,60);bae_ch
bae_ch$sum
bae_ch$avg
#사운드 패키지 ----
install.packages("beepr")
#사운드 패키지 ----
install.packages("beepr")
install.packages("beepr")
install.packages(c("cluster", "collections", "commonmark", "digest", "foreign", "jsonlite", "languageserver", "lintr", "MASS", "Matrix", "mgcv", "nlme", "nnet", "openssl", "rpart", "styler", "survival", "sys", "vctrs", "xfun", "yaml"))
#사운드 패키지 ----
install.packages("beepr")
for(i in 1:9){
for(j in 1:9){
print(i * j)
}
}
print(c(i,"단"),i * j)
for(j in 1:9){
print(c(i,"단"),i * j)
}
for(i in 1:9){
for(j in 1:9){
print(c(i,"단"),i * j)
}
}
cat(c(i,"단"),i * j)
for(i in 1:9){
for(j in 1:9){
cat(c(i,"단"),i * j)
}
}
for(i in 1:9){
cat(i,"단")
for(j in 1:9){
cat(i * j)
}
}
for(i in 1:9,fill=1){
for(i in 1:9){
cat(i,"단",fill=1)
for(j in 1:9){
cat(i * j)
}
}
for(i in 1:9){
cat(i,"단",fill=1)
for(j in 1:9){
y = i * j
cat(y)
}
}
for(i in 1:9){
cat(i,"단")
for(j in 1:9){
y = i * j
cat(y,fill=1)
}
}
for(i in 1:9){
for(j in 1:9){
y = i * j
cat(i,"*",y,"=",fill=1)
}
}
for(i in 1:9){
for(j in 1:9){
y = i * j
cat(i,"*",j,"=",y,fill=1)
}
}
for(i in 1:9){
for(j in 1:9){
y = i * j
cat(faste(i,"*",j,"=",y),fill=1)
}
}
for(i in 1:9){
for(j in 1:9){
y = i * j
cat(paste(i,"*",j,"=",y),fill=1)
}
}
#사운드 패키지 ----
install.packages("beepr")
library(beepr)
for(i in 1:9){
cat(i,"단")
for(j in 1:9){
y = i * j
cat(paste(i,"*",j,"=",y),fill=1)
}
}
for(i in 1:9){
cat(paste(i,"단"),fill=1)
for(j in 1:9){
y = i * j
cat(paste(i,"*",j,"=",y),fill=1)
}
}
fc(3)
is.numeric("a")
fc(3)
fc("aa")
fc <- function(x){
for(i in 1:9){
y = x * j
cat(paste(x,"*",j,"=",y),fill=1)
} #for문 close
}
fc(3)
fc <- function(x){
for(i in 1:9){
y = x * j
cat(paste(x,"*",i,"=",y),fill=1)
} #for문 close
}
fc(3)
fc("aa")
fc <- function(x){
for(i in 1:9){
y = x * i
cat(paste(x,"*",i,"=",y),fill=1)
} #for문 close
}
fc <- function(x){
if(is.numeric(x)){
for(i in 1:9){
y = x * i
cat(paste(x,"*",i,"=",y),fill=1)
} #for문 close
} #if문 close
}
fc(3)
fc("aa")
is.numeric("a")
fc <- function(x){
if(is.numeric(x)){
for(i in 1:9){
y = x * i
cat(paste(x,"*",i,"=",y),fill=1)
} #for문 close
}else{
cat("조건에 부합하지 않습니다.","메롱!",fill=1)
}
} #fu
fc(3)
fc("aa")
is.numeric("a")
fc <- function(x){
if(is.numeric(x)){
if(x < 10){
for(i in 1:9){
y = x * i
cat(paste(x,"*",i,"=",y),fill=1)
} #for문 close
}else{
cat("숫자가 너무 큽니다.",fill=1)
}
}else{
cat("조건에 부합하지 않습니다.","메롱!",fill=1)
}
}
fc(3)
fc("aa")
is.numeric("a")
fc(31)
fc(10)
fc(9)
fc(0)
fc(-10)
fc <- function(x){
if(is.numeric(x)){
if(x < 10 & x > 0){
for(i in 1:9){
y = x * i
cat(paste(x,"*",i,"=",y),fill=1)
} #for문 close
}else{
cat("숫자가 너무 큽니다.",fill=1)
}
}else{
cat("조건에 부합하지 않습니다.","메롱!",fill=1)
}
}
fc(-10)
fc(0)
fc(1)
fc(-100)
10 %in% c(1:9)
fc <- function(x){
if(is.numeric(x)){
if(x < 10 & 10 %in% c(1:9)){
#   if(x < 10 & x > 0){
for(i in 1:9){
y = x * i
cat(paste(x,"*",i,"=",y),fill=1)
} #for문 close
}else{
cat("1~9까지 입력하세요요.",fill=1)
}
}else{
cat("조건에 부합하지 않습니다.","메롱!",fill=1)
}
}
fc(0)
fc(1)
fc <- function(x){
if(is.numeric(x)){
if(x < 10 & x %in% c(1:9)){
#   if(x < 10 & x > 0){
for(i in 1:9){
y = x * i
cat(paste(x,"*",i,"=",y),fill=1)
} #for문 close
}else{
cat("1~9까지 입력하세요요.",fill=1)
}
}else{
cat("조건에 부합하지 않습니다.","메롱!",fill=1)
}
}
fc(1)
fc(0)
fc(10)
fc(9)
### 6) 빈도함수 (table(), hist(), qplot()) ----
# 6-1) number data
c(1,1,1,1,3,3,3,2,2,2,4,5,5,2,4,5)
### 6) 빈도함수 (table(), hist(), qplot()) ----
# 6-1) number data
b_num <- c(1,1,1,1,3,3,3,2,2,2,4,5,5,2,4,5)
b_num
class(b_num)
typeof(b_num)
table(b_num)
prop.table(b_num)
prop.table(b_num)  # 각 데이터 빈도비율
prop.table(table(b_num))  # 각 데이터 빈도비율
hist(b_num)
hist(table(b_num))
ggplot2::qplot(b_num)
# 6-2) character data
b_char <- c("a","a","b","b","c","a")
b_char
# 6-2) character data
b_char <- c("a","a","a","b","b","c","a")
b_char
class(b_char)
typeof(b_char)
#
table(b_char)
prop.table(b_char)
prop.table(table(b_char))*100
prop.table(table(b_num))*100  # 카테고리(범주)별 빈도비율 ** 주로사용
prop.table(table(b_char))*100
#
hist(b_char)
hist(table(b_char))
ggplot2::qplot(b_char)
c(NULL, "a","a",NULL,"b","c")
t1 <- c(NULL, "a","a",NULL,"b","c")
t1
table(t1)
table(t1,useNA = 'no')
table(t1,useNA = 'ifany')
t2 <- c(NULL, "a","a",NULL,"b","c",NA,NA)
t2
table(t2,useNA = 'no')    # NA를 표시금지
table(t2)
table(t2,useNA = 'no')    # NA를 표시금지
log(100)
log(100)
log(-100) #err
#
10^5
# 1e+100 / 1 * 10^5  의미
10^100
10^200
10^300
10^309
-10^308 #
-10^309 #
