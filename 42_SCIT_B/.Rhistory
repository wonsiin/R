sort(a, decreasing = T)
order(-a)
# 7-2) order() ----
#정렬된 데이터를 기준으로 원자료의 index (위치값)를 리턴
a
sort(a, decreasing = T)
order(-a)
#NA
a
order(a, na.last = T)
order(a, na.last = F)
order(a, na.last = NA) #NA제거거
# Q
r1 <- c(1,5)
# Q
r1 <- c(1,5);r1
r2 <- c(1:5,3);r2
r2 <- rep(1:5,3);r2
# Q
r1 <- c(1,5);r1
r2 <- rep(1:5,3);r2
sort(r1)
sort(r2)
r2(order(r2))
r2[order(r2)]
order(r2)
r2
order(r2)
r2
sort(r2)
order(r2)
paste(order(r2))
paste(order(r2),collapse = ",")
c(1,6,11,2,7,12,3,8,13,4,9,14,5,10,15)
r2[c(1,6,11,2,7,12,3,8,13,4,9,14,5,10,15)]
sort(r2)
r2[order(r2)]
r2[order(r2)]
sort(r2)
#사운드 패키지 ----
install.packages("beepr")
library(beepr)
search()
### 5) 사용자 정의 함수 ----
# 사용자정의함수명 <- function(x1,x2,...){
#   ...
#   함수구현
#   ...
#   return(결과값)
# }
# Q. 합계와 평균함수
my_fn <- function(a,b,c,d){
sum1 <- sum(a,b,c,d)
avg1 <- sum1/4
cat(paste("sum : " + sum1),
paste("avg : " + avg1),fill=1)
return(list(sum1, avg1))
}
#전체를 드래그 해주고 실행해줘야한다.
bae_ch <- my_fn(10,12,45,60)
my_fn <- function(a,b,c,d){
sum1 <- sum(a,b,c,d)
avg1 <- sum1/4
cat(paste("sum : ", sum1),
paste("avg : ", avg1),fill=1)
return(list(sum1, avg1))
}
#전체를 드래그 해주고 실행해줘야한다.
bae_ch <- my_fn(10,12,45,60)
bae_ch$sum; bea_ch$avg
bae_ch$sum
bea_ch$avg
bae_ch$sum1
bea_ch$avg1
#사운드 패키지 ----
install.packages("beepr")
#전체를 드래그 해주고 실행해줘야한다.
bae_ch <- my_fn(10,12,45,60);bae_ch
bae_ch$sum
bae_ch$avg
#사운드 패키지 ----
install.packages("beepr")
#사운드 패키지 ----
install.packages("beepr")
install.packages("beepr")
install.packages(c("cluster", "collections", "commonmark", "digest", "foreign", "jsonlite", "languageserver", "lintr", "MASS", "Matrix", "mgcv", "nlme", "nnet", "openssl", "rpart", "styler", "survival", "sys", "vctrs", "xfun", "yaml"))
#사운드 패키지 ----
install.packages("beepr")
for(i in 1:9){
for(j in 1:9){
print(i * j)
}
}
print(c(i,"단"),i * j)
for(j in 1:9){
print(c(i,"단"),i * j)
}
for(i in 1:9){
for(j in 1:9){
print(c(i,"단"),i * j)
}
}
cat(c(i,"단"),i * j)
for(i in 1:9){
for(j in 1:9){
cat(c(i,"단"),i * j)
}
}
for(i in 1:9){
cat(i,"단")
for(j in 1:9){
cat(i * j)
}
}
for(i in 1:9,fill=1){
for(i in 1:9){
cat(i,"단",fill=1)
for(j in 1:9){
cat(i * j)
}
}
for(i in 1:9){
cat(i,"단",fill=1)
for(j in 1:9){
y = i * j
cat(y)
}
}
for(i in 1:9){
cat(i,"단")
for(j in 1:9){
y = i * j
cat(y,fill=1)
}
}
for(i in 1:9){
for(j in 1:9){
y = i * j
cat(i,"*",y,"=",fill=1)
}
}
for(i in 1:9){
for(j in 1:9){
y = i * j
cat(i,"*",j,"=",y,fill=1)
}
}
for(i in 1:9){
for(j in 1:9){
y = i * j
cat(faste(i,"*",j,"=",y),fill=1)
}
}
for(i in 1:9){
for(j in 1:9){
y = i * j
cat(paste(i,"*",j,"=",y),fill=1)
}
}
#사운드 패키지 ----
install.packages("beepr")
library(beepr)
for(i in 1:9){
cat(i,"단")
for(j in 1:9){
y = i * j
cat(paste(i,"*",j,"=",y),fill=1)
}
}
for(i in 1:9){
cat(paste(i,"단"),fill=1)
for(j in 1:9){
y = i * j
cat(paste(i,"*",j,"=",y),fill=1)
}
}
fc(3)
is.numeric("a")
fc(3)
fc("aa")
fc <- function(x){
for(i in 1:9){
y = x * j
cat(paste(x,"*",j,"=",y),fill=1)
} #for문 close
}
fc(3)
fc <- function(x){
for(i in 1:9){
y = x * j
cat(paste(x,"*",i,"=",y),fill=1)
} #for문 close
}
fc(3)
fc("aa")
fc <- function(x){
for(i in 1:9){
y = x * i
cat(paste(x,"*",i,"=",y),fill=1)
} #for문 close
}
fc <- function(x){
if(is.numeric(x)){
for(i in 1:9){
y = x * i
cat(paste(x,"*",i,"=",y),fill=1)
} #for문 close
} #if문 close
}
fc(3)
fc("aa")
is.numeric("a")
fc <- function(x){
if(is.numeric(x)){
for(i in 1:9){
y = x * i
cat(paste(x,"*",i,"=",y),fill=1)
} #for문 close
}else{
cat("조건에 부합하지 않습니다.","메롱!",fill=1)
}
} #fu
fc(3)
fc("aa")
is.numeric("a")
fc <- function(x){
if(is.numeric(x)){
if(x < 10){
for(i in 1:9){
y = x * i
cat(paste(x,"*",i,"=",y),fill=1)
} #for문 close
}else{
cat("숫자가 너무 큽니다.",fill=1)
}
}else{
cat("조건에 부합하지 않습니다.","메롱!",fill=1)
}
}
fc(3)
fc("aa")
is.numeric("a")
fc(31)
fc(10)
fc(9)
fc(0)
fc(-10)
fc <- function(x){
if(is.numeric(x)){
if(x < 10 & x > 0){
for(i in 1:9){
y = x * i
cat(paste(x,"*",i,"=",y),fill=1)
} #for문 close
}else{
cat("숫자가 너무 큽니다.",fill=1)
}
}else{
cat("조건에 부합하지 않습니다.","메롱!",fill=1)
}
}
fc(-10)
fc(0)
fc(1)
fc(-100)
10 %in% c(1:9)
fc <- function(x){
if(is.numeric(x)){
if(x < 10 & 10 %in% c(1:9)){
#   if(x < 10 & x > 0){
for(i in 1:9){
y = x * i
cat(paste(x,"*",i,"=",y),fill=1)
} #for문 close
}else{
cat("1~9까지 입력하세요요.",fill=1)
}
}else{
cat("조건에 부합하지 않습니다.","메롱!",fill=1)
}
}
fc(0)
fc(1)
fc <- function(x){
if(is.numeric(x)){
if(x < 10 & x %in% c(1:9)){
#   if(x < 10 & x > 0){
for(i in 1:9){
y = x * i
cat(paste(x,"*",i,"=",y),fill=1)
} #for문 close
}else{
cat("1~9까지 입력하세요요.",fill=1)
}
}else{
cat("조건에 부합하지 않습니다.","메롱!",fill=1)
}
}
fc(1)
fc(0)
fc(10)
fc(9)
### 6) 빈도함수 (table(), hist(), qplot()) ----
# 6-1) number data
c(1,1,1,1,3,3,3,2,2,2,4,5,5,2,4,5)
### 6) 빈도함수 (table(), hist(), qplot()) ----
# 6-1) number data
b_num <- c(1,1,1,1,3,3,3,2,2,2,4,5,5,2,4,5)
b_num
class(b_num)
typeof(b_num)
table(b_num)
prop.table(b_num)
prop.table(b_num)  # 각 데이터 빈도비율
prop.table(table(b_num))  # 각 데이터 빈도비율
hist(b_num)
hist(table(b_num))
ggplot2::qplot(b_num)
# 6-2) character data
b_char <- c("a","a","b","b","c","a")
b_char
# 6-2) character data
b_char <- c("a","a","a","b","b","c","a")
b_char
class(b_char)
typeof(b_char)
#
table(b_char)
prop.table(b_char)
prop.table(table(b_char))*100
prop.table(table(b_num))*100  # 카테고리(범주)별 빈도비율 ** 주로사용
prop.table(table(b_char))*100
#
hist(b_char)
hist(table(b_char))
ggplot2::qplot(b_char)
c(NULL, "a","a",NULL,"b","c")
t1 <- c(NULL, "a","a",NULL,"b","c")
t1
table(t1)
table(t1,useNA = 'no')
table(t1,useNA = 'ifany')
t2 <- c(NULL, "a","a",NULL,"b","c",NA,NA)
t2
table(t2,useNA = 'no')    # NA를 표시금지
table(t2)
table(t2,useNA = 'no')    # NA를 표시금지
log(100)
log(100)
log(-100) #err
#
10^5
# 1e+100 / 1 * 10^5  의미
10^100
10^200
10^300
10^309
-10^308 #
-10^309 #
n1;length(n1)
# 8-2 ) NULL / NA
n1 <- c(1,2,3,NULL,NULL)
n1;length(n1)
n2 <- c(1,2,3,NA,NA)
n2;length(n2)
3+NA
3+NULL
3+NA;3+NULL
n1;n1+1
n2;n2+1
n1;n1+1;n1+NA
n1;n1+1;n1+NA;n1+NULL
n2;n2+1;n2+NA;n2+NULL
n1
sum(n1)
n2
sum(n2)
sum(n2, na.rm = T)
### 1) vector 와 list ----
v1 <- c(1,2,3);v1;length(v1)
class(v1)
v2 <- c(1,2,3,"김정수");v2;length(v2)
class(v2)
# named vector
v3 <- c(a=1,b=2,a=3,c=20);v3;length(v3)
class(v3)
View(v1)
View(v3)
xx1 <- list(name="이태규",addr ="화곡동")
xx1
View(xx1)
xx1$name
xx1$addr
#key만 추가
xx1 <- list(name="이태규",height=180)
xx1
x(xx1,list(phone=NA))
XX2 <- x(xx1,list(phone=NA))
XX2
#key만 추가
xx1 <- list(name="이태규",height=180)
xx1
XX2 <- x(xx1,list(phone=NA))
XX2 <- C(xx1,list(phone=NA))
XX2 <- c(xx1,list(phone=NA))
XX2
View(xx2)
View(xx2)
xx2 <- c(xx1,list(phone=NA))
xx2
View(xx2)
# key와 value 추가
xx3 <- c(xx2, list(addr="화곡동"))
xx3
View(xx3)
#
xx3[4] #index별 list box 통채로 확인인
class(xx3[4])
xx3[[4]]
xx3$addr
class(xx3$addr)
View(xx3)
### 3) list boxing / unboxing 테스트 ----
#1번째 list box에 value 추가
xx3[1]
temp01 <- c(xx3[1],'이승범')
temp01
View[temp01]
View(temp01)
# 1번째 list box를 unboxing 하고 value 추가
xx3[1]
xx3[[1]]
c(xx3[[1]],"이승범범")
c(xx3[[1]],"이승범")
temp02 <-c(xx3[[1]],"이승범")
temp02
View(temp02)
### 4) list box별 value 추가 ----
xx3
XX3[[1]] <- C(XX3[[1]],"김정수수")
### 4) list box별 value 추가 ----
xx3
XX3[[1]] <- C(XX3[[1]],"김정수")
xx3[[1]] <- C(xx3[[1]],"김정수")
xx3[[2]]<-c(xx3[[2]],185)
xx3[[1]] <- c(xx3[[1]],"김정수")
xx3[[3]]<-c(xx3[[3]],6378)
xx3[[4]]<-c(xx3[[4]],"185"노량진)
xx3[[4]]<-c(xx3[[4]],"노량진")
View(xx3)
#데이터 조회
XX31[1]
#데이터 조회
xx31[1]
xx3[[1]][2]
xx3[[1]][1]
#리스트 값 갱신
xx3
xx3[[3]][1]
xx3[[3]][1] <- "5830"
xx3[[3]][1]
#리스트 삭제
xx3[3] <- NULL
xx3
my_mpg <- as.data.frame(ggplot2::mpg)
my_mpg <- ggplot2::mpg
class(my_mpg)
### 2) df생성, key-in 방식 ----
java <- c(100,20,45,66,71)
eng <- c(54,71,78,86,91)
jp <- c(64,92,88,66,31)
java;eng;jp;
data.frame(java,eng,jp)
my_score<-data.frame(java,eng,jp)
my_score
# 변수 생성을 깜박!
team <- c(1,2,3,4,5)
my_score <- data.frame(java,eng,jp,team)
my_score
#과목별 평균값
mean(my_score$java)
mean(my_score$eng)
mean(my_score$jp)
mean(my_score$team)
#과목별 평균값
m_java<- mean(my_score$java)
m_eng<- mean(my_score$eng)
m_jp<- mean(my_score$jp)
mean(my_score$team)
### 3) 엑셀파일 읽기와 쓰기 ----
data.frame(m_java,m_eng,m_jp)
### 3) 엑셀파일 읽기와 쓰기 ----
mean_sc <- data.frame(m_java,m_eng,m_jp)
mean_sc
install.packages("writexl")
install.packages("writexl")
getwd()
writexl::write_xlsx(mean_sc,"dts/m_score.xlsx")
install.packages("writexl")
getwd()
install.packages("writexl")
install.packages("writexl")
#read
getwd()
install.packages("readxl")
library(readxl)
search()
#read
getwd()
df_xl <- read_xlsx("bts/f_exam.xlsx",sheet=1,col_names=T)
class(df_xl)
dim(df_xl)
